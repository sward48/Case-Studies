---
title: "Hamden Appraised Value 'Fairness', Part 2: Data Acquisition"
date: "`r Sys.Date()`"
authors: "Benedikt Farag, Elisa Sommer and Steven Ward"
format: html
---

```{r}
# make a figures directory if it doesn't exist
if (!dir.exists("figures")){
    dir.create("figures")
}
```

```{r}
library(dplyr)
library(janitor)
library(stringr)
library(rvest)
```

```{r, eval=FALSE}
# Make subset from the CT property data for Hamden only
#   eval=FALSE to avoid re-running this code (the RDS file is in the directory)

# read the csv file
ct <- read.csv("rawdata/Connecticut_CAMA_and_Parcel_Layer_3895368049124948111.csv")

# filter the ct with Town_name = Hamden
ct <- ct %>% filter(Town_Name == "Hamden")

# save as rds
saveRDS(ct, file = "data/hamden.RDS") 
```

# Scraping of the HTML files

Keep the html directory "Hamden_Sept2025" in the working directory.

```{r, eval=FALSE}
# eval=FALSE to avoid re-running the scraping 
#   (the output file sales_scraped.csv is in the data directory)

# file from the zip file
files <- list.files("rawdata/Hamden_Sept2025", pattern = "*.html", full.names = TRUE)

df <- data.frame() # to collect values from each html
skips <- c() # to collect skipped file numbers

for (file in files){
    d1 <- read_html(file) 
    d2 <- d1 %>% html_table()
    html_lines <- strsplit(as.character(d1), "\n")[[1]]

    if (length(d2) < 6) { # skip if no table
        # append file number before .html to skips
        skips <- c(skips, gsub(".*\\/|\\.html", "", file))
        next
    }

    # get the line number with PID
    line_PID <- grep("PID", html_lines)

    # PID from the file, 3rd row after the line with PID
    pid <- gsub("<.*?>", "", html_lines[line_PID+3]) %>% trimws()
    pid <- as.numeric(pid) # make numeric

    # 2024 assessed value
    assessed_2024 <- d2[3]
    assessed_2023 <- d2[length(d2)]  # 2023 is the last table

    # Sale prices
    sale_prices <- d2[[6]]

    #building_2023 <- as.numeric(gsub("[$,]", "", assessed_2023[[1]][2]))
    #extra_2023 <- as.numeric(gsub("[$,]", "", assessed_2023[[1]][3]))
    #outb_2023 <- as.numeric(gsub("[$,]", "", assessed_2023[[1]][4]))
    #land_2023 <- as.numeric(gsub("[$,]", "", assessed_2023[[1]][5]))
    total_2023 <- as.numeric(gsub("[$,]", "", assessed_2023[[1]][6]))

    #building_2024 <- as.numeric(gsub("[$,]", "", assessed_2024[[1]][2]))
    #extra_2024 <- as.numeric(gsub("[$,]", "", assessed_2024[[1]][3]))
    #outb_2024 <- as.numeric(gsub("[$,]", "", assessed_2024[[1]][4]))
    #land_2024 <- as.numeric(gsub("[$,]", "", assessed_2024[[1]][5]))
    total_2024 <- as.numeric(gsub("[$,]", "", assessed_2024[[1]][6]))

    sale_df <- as.data.frame(sale_prices)
    sale_df["Sale Price"] <- as.numeric(gsub("[$,]", "", sale_df[,"Sale Price"]))
    sale_df["Sale Date"] <- as.Date(sale_df[,"Sale Date"], format = "%m/%d/%Y")

    # select the most recent sale above 1000
    if (nrow(sale_df) > 1 & any(sale_df$`Sale Price` > 1000)){
        sale_df <- sale_df %>% 
            filter(`Sale Price` > 1000) %>% 
            arrange(desc(`Sale Date`))
    }
    sale_price <- sale_df[1, "Sale Price"]
    sale_date <- sale_df[1, "Sale Date"]

    # Collect sales sold in 2009 if any and greater than $1000
    sale_df$year <- as.numeric(format(sale_df$`Sale Date`, "%Y"))

    sale_df_2009 <- sale_df %>% filter(year == 2009)
    if (nrow(sale_df_2009) > 0){
        sale_price_2009 <- sale_df_2009[1, "Sale Price"]
        sale_date_2009 <- sale_df_2009[1, "Sale Date"]
    } else {
        sale_price_2009 <- NA
        sale_date_2009 <- NA
    }

    # add to the data frame
    property <- data.frame(
        pid = pid,
        sale_price = sale_price,
        sale_date = sale_date,
        sale_price_2009 = sale_price_2009,
        sale_date_2009 = sale_date_2009,
        total_2024 = total_2024,
        total_2023 = total_2023
        #building_2024 = building_2024,
        #building_2023 = building_2023,
        #extra_2024 = extra_2024,
        #extra_2023 = extra_2023,
        #outb_2024 = outb_2024,
        #outb_2023 = outb_2023,
        #land_2024 = land_2024,
        #land_2023 = land_2023
    )

    df <- rbind(df, property)

    if (nrow(df) %% 1000 == 0){
        cat(nrow(df), " ")
    }
}
df$sale_date <- as.Date(df$sale_date)
df$sale_date_2009 <- as.Date(df$sale_date_2009)

if (length(skips) > 0){
    print(paste("Skipped a total of", length(skips), "files"))
} else {
    print("No files were skipped")
}

# order df by pid
df <- df %>% arrange(pid)

# save to csv file
write.csv(df, "data/sales_scraped.csv", row.names = FALSE)
```

Plot histogram of sale years with sale_price \> 10000 (after 2010)

```{r}
df <- read.csv("data/sales_scraped.csv")
df$sale_date <- as.Date(df$sale_date)

df$years <- as.numeric(format(df$sale_date, "%Y"))

# histogram of years with sale_price > 10000 (after 2010), bars centered at integers
hist(df$years[df$years >= 2008 & df$sale_price>10000], xlab = "Year", main="", breaks = seq(2007.5, 2025.5, by=1))
box()

# save as pdf
dev.copy2pdf(file = "figures/year_hist.pdf", width = 7, height = 5)
```