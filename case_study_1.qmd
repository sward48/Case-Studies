---
title: "Case Study 1"
authors: "Benedickt, Elisa, & Steve"
format: html
editor: visual
---


## Question 1

The economists' "efficient market hypothesis"
```{r waring=FALSE, message=FALSE}
#read in data and clean it.
#going to put it all in here because we did this in class
fileurl <- 'cbblog12.html'
x <- scan(fileurl, what = "", sep = "\n")
x <- gsub('&#160;', '', x, fixed = TRUE)      # Simple search/replace, no magic
x <- gsub('</span>', ',', x, fixed = TRUE)
x <- gsub("<[^<>]*>", "", x) 
y <- strsplit(x, ",")
z <- y[sapply(y, length) == 7]
zz <- matrix(unlist(z), ncol = 7, byrow = TRUE)
scores <- strsplit(zz[, 5], "-")
table(sapply(scores, length))
scores <- matrix(as.numeric(unlist(scores)), ncol = 2, byrow = TRUE)
ps <- as.numeric(zz[,4])   
ps <- gsub("'", ".5", zz[,4])
temp <- as.numeric(ps)
ps[is.na(temp)] 
ps <- as.numeric(gsub("P", 0, ps))
x <- data.frame(pointspread = ps,
                score1 = scores[,1],
                score2 = scores[,2],
                scorediff = scores[,2] - scores[,1],
                loc = zz[,6],
                stringsAsFactors = FALSE)
```

Now for the linear model and the graph provided in the first part.
```{r}
plot(scorediff ~ pointspread, data = x,
     xlab="Pre-Game Point Spread",
     ylab="Actual Game Score Differential")
abline(0, 1)    # Efficient market hypothesis

lm.result <- lm(scorediff ~ pointspread, data=x)
abline(lm.result, col="red", lwd=3)
```

```{r}
summary(lm.result2 <- lm(scorediff ~ pointspread, data=x))
```

### Q: What do you think about the economists' "efficient market hypothesis"?

### A: The efficient market hypothesis suggests that the pre-game point spreads set by bookmakers should be unbiased predictors of the actual game score differentials. In other words, if the hypothesis holds true, we would expect the actual score differential to closely match the point spread on average. From the plot provided in part one, we can see that generally this is true. We can see this from the red line (the linear model fit) being close to the black line (the efficient market hypothesis line). 


### Q: Using the linear model, above, with the data set assembled in this script, conduct a formal hypothesis test, with specific reference to a p-value that you think is helpful. Describe and defend (or criticise) it. If something concerns you, explain.

### A: The null hypothesis (H0) for this test is that the coefficient for pointspread is equal to 1, which would indicate that the pre-game point spreads are unbiased predictors of the actual game score differentials. The alternative hypothesis (H1) is that the coefficient for pointspread is not equal to 1, suggesting that the pre-game point spreads are biased predictors. We can see that the linear model run above gives pointspread a coefficient of about 1. The p-value is < 2.2e-16, which clearly shows significance. This means we can reject the null hypothesis and conclude that there is a statistically significant relationship between the pre-game point spreads and the actual game score differentials. 


# NFL PART

```{r}
#read in data
fileurl <- '17nflog.html'
x <- scan(fileurl, what = "", sep = "\n")
```

```{r}
#test
x[23]
```

```{r}
#get rid of html and nasty-ness
x <- gsub('&nbsp;', '', x, fixed = TRUE)
x <- gsub("</span>", ",", x) 
x <- gsub("<[^<>]*>", "", x)
```

```{r}
#split by commas
y <- strsplit(x, ",")
y[23]
```


```{r}
#This block will line up the teams
z <- y[sapply(y, length) == 6 | sapply(y, length) == 1]

# only keep rows with length 1 that have all capitalized letters or parentheses
team_function <- function(v) {
  if(length(v) == 1) {
    grepl("^[A-Z &().]+$", v)
  } else {
    TRUE
  }
}
z <- z[sapply(z, team_function)]

# for lines with length 1, remove all parentheses and their contents
for(i in seq_along(z)) {
  if(length(z[[i]]) == 1) {
    z[[i]] <- gsub("\\(.*?\\)", "", z[[i]])
  }
}

for(i in seq_along(z)) {
  if(length(z[[i]]) == 6) {
    z[[i]] <- gsub("-ot", "", z[[i]])  }
}

title <- function(x) {
  paste0(toupper(substring(x, 1, 1)),
         tolower(substring(x, 2)))
}

# make an empty df with rownames team1 and team2
df <- data.frame(team1 = character(),
                 team2 = character())

# loop through z and when length is 1, set team1 from the last row with length 1
# and team2 as the following rows from second element
for (i in seq_along(z)) {
  if(length(z[[i]]) == 1) {
    team1 <- title(z[[i]])
  } else if(length(z[[i]]) == 6) {
    team2 <- title(z[[i]][2])
    df <- rbind(df, data.frame(team1 = team1, team2 = team2))
  }
}


```


```{r}
#this block will find out the ot status (searches opponet name for "-ot")
zz <- y[sapply(y, length) == 6]
#make ot column
ot <- rep(NA, 534)
for(i in 1:534){
  if (grepl("-ot", zz[[i]][2])){
    ot[i] <- TRUE
  } else {
    ot[i] <- FALSE
  }
}
```



```{r}
#block finds the scores of the games
zz <- y[sapply(y, length) == 6]
scores <- rep(NA, 534)
for(i in 1:534){
  scores[i] <- zz[[i]][5]
}
scores <- strsplit(scores, "-")
table(sapply(scores, length))
scores <- matrix(as.numeric(unlist(scores)), ncol = 2, byrow = TRUE)
```


```{r}
#fixing the dates
wrong <- rep(NA, 534)
for(i in 1:534){
  wrong[i] <- zz[[i]][1]
}

#make a dictionary to fix the date format (add in year so it's less annoying)
month_year_dict <- c(
  J = "2018/01",
  F = "2018/02",
  S = "2017/09",
  O = "2017/10",
  N = "2017/11",
  D = "2017/12"
)
#split the month up into parts then fix it
wrong <- gsub("*", "", wrong, fixed = TRUE)
wrong <- strsplit(wrong, "\\.")

months <- sapply(sapply(wrong, `[`, 1), function(m) month_year_dict[m])
days <- sapply(wrong, `[`, 2)

dates <- paste(months, days, sep = "/")
```


```{r}
#this will make adding the pointspread and overunder easier
#follow the same simple extraction technique and make into its own col
zz <- y[sapply(y, length) == 6]
ps <- rep(NA, 534)
for(i in 1:534){
  ps[i] <- zz[[i]][4]
}

ou <- rep(NA, 534)
for(i in 1:534){
  ou[i] <- zz[[i]][6]
}
```

```{r}
#add the season (will all be 2017)
season = rep(2017, 534)
```

```{r}
#throw it all together
x <- data.frame(date = dates,
                season = season,
                team1 = df$team1,
                team2 = df$team2,
                pointspread = ps,
                score1 = scores[,1],
                score2 = scores[,2],
                overtime = ot,
                overunder = ou,
                stringsAsFactors = FALSE)
```


```{r}
#write the csv to computer
write.csv(x, "nfl_2017.csv", row.names = FALSE)
```








































